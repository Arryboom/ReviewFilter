<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ovo.dao.LikesMapper">
  <resultMap id="BaseResultMap" type="com.ovo.bean.Likes">
    <id column="likes_ID" jdbcType="INTEGER" property="likesId" />
    <result column="news_ID" jdbcType="CHAR" property="newsId" />
    <result column="users_ID" jdbcType="CHAR" property="usersId" />
    <result column="likes_time" jdbcType="TIMESTAMP" property="likesTime" />
  </resultMap>
  <resultMap id="aaResultMap" type="java.lang.String">
  <result column="news_ID" jdbcType="CHAR" property="newsId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    likes_ID, news_ID, users_ID, likes_time
  </sql>
  <select id="selectByExample" parameterType="com.ovo.bean.LikesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from likes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from likes
    where likes_ID = #{likesId,jdbcType=CHAR}
  </select>
  <select id="selectnewsIdByusersId" parameterType="java.lang.String" resultType="String">
    select news_ID
    from likes
    where users_ID = #{usersId,jdbcType=CHAR}
  </select>
  <select id="selectBynewsIdusersId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from likes
    where news_ID = #{arg0,jdbcType=CHAR} and users_ID =#{arg1,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from likes
    where likes_ID = #{likesId,jdbcType=CHAR}
  </delete>
  <delete id="deleteBynewsIdusersId" parameterType="java.lang.String">
    delete from likes
    where news_ID = #{arg0,jdbcType=CHAR} and users_ID=#{arg1,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ovo.bean.LikesExample">
    delete from likes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ovo.bean.Likes">
    insert into likes (likes_ID, news_ID, users_ID, 
      likes_time)
    values (#{likesId,jdbcType=CHAR}, #{newsId,jdbcType=CHAR}, #{usersId,jdbcType=CHAR}, 
      #{likesTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ovo.bean.Likes">
    insert into likes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="likesId != null">
        likes_ID,
      </if>
      <if test="newsId != null">
        news_ID,
      </if>
      <if test="usersId != null">
        users_ID,
      </if>
      <if test="likesTime != null">
        likes_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="likesId != null">
        #{likesId,jdbcType=INTEGER},
      </if>
      <if test="newsId != null">
        #{newsId,jdbcType=CHAR},
      </if>
      <if test="usersId != null">
        #{usersId,jdbcType=CHAR},
      </if>
      <if test="likesTime != null">
        #{likesTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ovo.bean.LikesExample" resultType="java.lang.Long">
    select count(*) from likes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update likes
    <set>
      <if test="record.likesId != null">
        likes_ID = #{record.likesId,jdbcType=CHAR},
      </if>
      <if test="record.newsId != null">
        news_ID = #{record.newsId,jdbcType=CHAR},
      </if>
      <if test="record.usersId != null">
        users_ID = #{record.usersId,jdbcType=CHAR},
      </if>
      <if test="record.likesTime != null">
        likes_time = #{record.likesTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update likes
    set likes_ID = #{record.likesId,jdbcType=CHAR},
      news_ID = #{record.newsId,jdbcType=CHAR},
      users_ID = #{record.usersId,jdbcType=CHAR},
      likes_time = #{record.likesTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ovo.bean.Likes">
    update likes
    <set>
      <if test="newsId != null">
        news_ID = #{newsId,jdbcType=CHAR},
      </if>
      <if test="usersId != null">
        users_ID = #{usersId,jdbcType=CHAR},
      </if>
      <if test="likesTime != null">
        likes_time = #{likesTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where likes_ID = #{likesId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ovo.bean.Likes">
    update likes
    set news_ID = #{newsId,jdbcType=CHAR},
      users_ID = #{usersId,jdbcType=CHAR},
      likes_time = #{likesTime,jdbcType=TIMESTAMP}
    where likes_ID = #{likesId,jdbcType=CHAR}
  </update>
</mapper>