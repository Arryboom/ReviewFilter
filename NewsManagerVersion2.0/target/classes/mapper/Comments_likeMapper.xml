<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ovo.dao.Comments_likeMapper">
  <resultMap id="BaseResultMap" type="com.ovo.bean.Comments_like">
    <id column="acts_ID" jdbcType="INTEGER" property="actsId" />
    <result column="comments_ID" jdbcType="INTEGER" property="commentsId" />
    <result column="news_ID" jdbcType="CHAR" property="newsId" />
    <result column="users_ID" jdbcType="CHAR" property="usersId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    acts_ID, comments_ID, news_ID, users_ID
  </sql>
  <select id="selectByExample" parameterType="com.ovo.bean.Comments_likeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comments_like
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comments_like
    where acts_ID = #{actsId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comments_like
    where acts_ID = #{actsId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByNewsId" parameterType="java.lang.String">
    delete from comments_like
    where news_ID = #{newsId,jdbcType=CHAR}
  </delete>
  <delete id="deleteBycommentsIdnewsIdusersId" parameterType="java.lang.String">
    delete from comments_like
    where commentsId = #{arg0,jdbcType=INTEGER} and newsId =#{arg1,jdbcType=CHAR} and usersId=#{arg2,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ovo.bean.Comments_likeExample">
    delete from comments_like
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ovo.bean.Comments_like">
    insert into comments_like (acts_ID, comments_ID, news_ID, 
      users_ID)
    values (#{actsId,jdbcType=CHAR}, #{commentsId,jdbcType=CHAR}, #{newsId,jdbcType=CHAR}, 
      #{usersId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ovo.bean.Comments_like">
    insert into comments_like
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="actsId != null">
        acts_ID,
      </if>
      <if test="commentsId != null">
        comments_ID,
      </if>
      <if test="newsId != null">
        news_ID,
      </if>
      <if test="usersId != null">
        users_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="actsId != null">
        #{actsId,jdbcType=INTEGER},
      </if>
      <if test="commentsId != null">
        #{commentsId,jdbcType=INTEGER},
      </if>
      <if test="newsId != null">
        #{newsId,jdbcType=CHAR},
      </if>
      <if test="usersId != null">
        #{usersId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ovo.bean.Comments_likeExample" resultType="java.lang.Long">
    select count(*) from comments_like
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comments_like
    <set>
      <if test="record.actsId != null">
        acts_ID = #{record.actsId,jdbcType=CHAR},
      </if>
      <if test="record.commentsId != null">
        comments_ID = #{record.commentsId,jdbcType=CHAR},
      </if>
      <if test="record.newsId != null">
        news_ID = #{record.newsId,jdbcType=CHAR},
      </if>
      <if test="record.usersId != null">
        users_ID = #{record.usersId,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comments_like
    set acts_ID = #{record.actsId,jdbcType=CHAR},
      comments_ID = #{record.commentsId,jdbcType=CHAR},
      news_ID = #{record.newsId,jdbcType=CHAR},
      users_ID = #{record.usersId,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ovo.bean.Comments_like">
    update comments_like
    <set>
      <if test="commentsId != null">
        comments_ID = #{commentsId,jdbcType=CHAR},
      </if>
      <if test="newsId != null">
        news_ID = #{newsId,jdbcType=CHAR},
      </if>
      <if test="usersId != null">
        users_ID = #{usersId,jdbcType=CHAR},
      </if>
    </set>
    where acts_ID = #{actsId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ovo.bean.Comments_like">
    update comments_like
    set comments_ID = #{commentsId,jdbcType=CHAR},
      news_ID = #{newsId,jdbcType=CHAR},
      users_ID = #{usersId,jdbcType=CHAR}
    where acts_ID = #{actsId,jdbcType=CHAR}
  </update>
</mapper>